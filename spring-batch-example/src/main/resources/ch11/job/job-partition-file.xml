<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"    
    xmlns:bean="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:tx="http://www.springframework.org/schema/tx"    
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">
    <bean:import resource="classpath:ch11/job-context.xml"/>
    <bean:import resource="classpath:ch11/job-context-db.xml"/>
    
    <job id="partitionJob">
		<step id="partitionStep">
			<!--属性step声明了引用的作业步的名称-->
			<!--partition引用指定的分区规则，子元素handler用于指定使用的本地处理的线程池-->

			<partition step="partitionReadWriteStep" partitioner="filePartitioner">
				<handler grid-size="2" task-executor="taskExecutor"/>
			</partition>
		</step>
	</job>

	<step id="partitionReadWriteStep">
		<tasklet>
			<chunk reader="flatFileItemReader" writer="jdbcItemWriter" 
			    processor="creditBillProcessor" commit-interval="2" />
			 <listeners>
                  <listener ref="partitionItemReadListener"></listener>
             </listeners>
		</tasklet>
	</step>

	<!--读分区规则-->
	<bean:bean id="filePartitioner" 
	    class="org.springframework.batch.core.partition.support.MultiResourcePartitioner">
		<!--属性keyName用于执行作业步上下文中属性的名字-->
		<bean:property name="keyName" value="fileName"/>
		<!--定义需要分区的文件集，使用MultiResourcePartitioner的时候，要求根据统一的后缀名-->
		<bean:property name="resources" value="classpath:/ch11/data/*.csv"/>
	</bean:bean>

	<!--定义文件读-->
	<bean:bean id="flatFileItemReader" scope="step"
        class="org.springframework.batch.item.file.FlatFileItemReader">
        <bean:property name="resource" 
            value="#{stepExecutionContext[fileName]}"/>
        <bean:property name="lineMapper" ref="lineMapper" />
    </bean:bean>
    
	<bean:bean id="lineMapper" 
	    class="org.springframework.batch.item.file.mapping.DefaultLineMapper" >
	    <bean:property name="lineTokenizer" ref="delimitedLineTokenizer" />
	    <bean:property name="fieldSetMapper" ref="creditBillFieldSetMapper"/>
	</bean:bean>
	
	<bean:bean id="delimitedLineTokenizer" 
        class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <bean:property name="delimiter" value=","/>
        <bean:property name="names" value="id,accountID,name,amount,date,address" />
    </bean:bean>

    <bean:bean id="creditBillFieldSetMapper"
        class="com.juxtapose.example.ch11.partition.CreditBillFieldSetMapper">
    </bean:bean>
    
    <bean:bean id="jdbcItemWriter" 
        class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="sql" value="insert into t_destcredit (ID,ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS) values (:id,:accountID,:name,:amount,:date,:address)"/>
        <bean:property name="itemSqlParameterSourceProvider">
            <bean:bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </bean:property>
    </bean:bean>
    
    <bean:bean id="creditBillProcessor" scope="step"
        class="com.juxtapose.example.ch11.partition.CreditBillProcessor">
    </bean:bean>

    <bean:bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<bean:property name="corePoolSize" value="5"/>
		<bean:property name="maxPoolSize" value="15"/>
	</bean:bean>

	<!--读监听器-->
    <bean:bean id="partitionItemReadListener"
		class="com.juxtapose.example.ch11.partition.PartitionStepExecutionListener">
	</bean:bean>
	
</bean:beans>